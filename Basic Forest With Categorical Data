import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_log_error
from sklearn.metrics import mean_absolute_error

features = ['MSSubClass', 'LotArea', 'OverallQual', 'OverallCond', 'YrSold']
catergorical = ['MSZoning', 'Neighborhood', 'Condition1', 'Condition2', 'SaleCondition']
training_data = pd.read_csv('/content/train.csv')
test_data = pd.read_csv('/content/test.csv')


forestModel = RandomForestRegressor(random_state=1)

X = training_data[features + catergorical]

encoder = LabelEncoder()
label_X = X.copy()
for col in catergorical:
    label_X[col] = encoder.fit_transform(X[col].astype(str))

imputer = SimpleImputer()
imputed_X = pd.DataFrame(imputer.fit_transform(label_X))


y = training_data.SalePrice
train_X, val_X, train_y, val_y = train_test_split(imputed_X, y, random_state = 0)

forestModel.fit(train_X, train_y)
predictions = forestModel.predict(val_X)
print(mean_absolute_error(val_y,predictions))


#TestData

test_X = test_data[features + catergorical]

test_label_X = test_X.copy()
test_encoder = LabelEncoder()
for col in catergorical:
    test_label_X[col] = test_encoder.fit_transform(test_X[col].astype(str))

test_imputer = SimpleImputer()
test_imputed_X = pd.DataFrame(test_imputer.fit_transform(test_label_X))

test_Predictions = forestModel.predict(test_imputed_X)

output = pd.DataFrame({'Id': test_data.Id,
                     'SalePrice': test_Predictions})
output.to_csv('submission.csv', index=False)
